@import "_placeholder.scss";

// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$logo-sm-name: 'logo-sm';
$logo-sm-x: 0px;
$logo-sm-y: 0px;
$logo-sm-offset-x: 0px;
$logo-sm-offset-y: 0px;
$logo-sm-width: 164px;
$logo-sm-height: 91px;
$logo-sm-total-width: 293px;
$logo-sm-total-height: 132px;
$logo-sm-image: '../img/sprite.png';
$logo-sm: (0px, 0px, 0px, 0px, 164px, 91px, 293px, 132px, '../img/sprite.png', 'logo-sm', );
$logo-name: 'logo';
$logo-x: 169px;
$logo-y: 0px;
$logo-offset-x: -169px;
$logo-offset-y: 0px;
$logo-width: 124px;
$logo-height: 69px;
$logo-total-width: 293px;
$logo-total-height: 132px;
$logo-image: '../img/sprite.png';
$logo: (169px, 0px, -169px, 0px, 124px, 69px, 293px, 132px, '../img/sprite.png', 'logo', );
$phone-sm-name: 'phone-sm';
$phone-sm-x: 83px;
$phone-sm-y: 96px;
$phone-sm-offset-x: -83px;
$phone-sm-offset-y: -96px;
$phone-sm-width: 23px;
$phone-sm-height: 22px;
$phone-sm-total-width: 293px;
$phone-sm-total-height: 132px;
$phone-sm-image: '../img/sprite.png';
$phone-sm: (83px, 96px, -83px, -96px, 23px, 22px, 293px, 132px, '../img/sprite.png', 'phone-sm', );
$phone-name: 'phone';
$phone-x: 0px;
$phone-y: 96px;
$phone-offset-x: 0px;
$phone-offset-y: -96px;
$phone-width: 37px;
$phone-height: 36px;
$phone-total-width: 293px;
$phone-total-height: 132px;
$phone-image: '../img/sprite.png';
$phone: (0px, 96px, 0px, -96px, 37px, 36px, 293px, 132px, '../img/sprite.png', 'phone', );
$site-sm-name: 'site-sm';
$site-sm-x: 169px;
$site-sm-y: 74px;
$site-sm-offset-x: -169px;
$site-sm-offset-y: -74px;
$site-sm-width: 19px;
$site-sm-height: 17px;
$site-sm-total-width: 293px;
$site-sm-total-height: 132px;
$site-sm-image: '../img/sprite.png';
$site-sm: (169px, 74px, -169px, -74px, 19px, 17px, 293px, 132px, '../img/sprite.png', 'site-sm', );
$site-name: 'site';
$site-x: 42px;
$site-y: 96px;
$site-offset-x: -42px;
$site-offset-y: -96px;
$site-width: 36px;
$site-height: 32px;
$site-total-width: 293px;
$site-total-height: 132px;
$site-image: '../img/sprite.png';
$site: (42px, 96px, -42px, -96px, 36px, 32px, 293px, 132px, '../img/sprite.png', 'site', );
$spritesheet-width: 293px;
$spritesheet-height: 132px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($logo-sm, $logo, $phone-sm, $phone, $site-sm, $site, );
$spritesheet: (293px, 132px, '../img/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
$sprite-offset-x: nth($sprite, 3);
$sprite-offset-y: nth($sprite, 4);
background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
$sprite-image: nth($sprite, 9);
background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
@include sprite-image($sprite);
@include sprite-position($sprite);
@include sprite-width($sprite);
@include sprite-height($sprite);
}




// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
@each $sprite in $sprites {
$sprite-name: nth($sprite, 10);

$slice: #{$sprite-name};
@if str-index($slice, '-lg') {
$slice: str-slice( #{$sprite-name}, 0, -4);
} @else if str-index($slice, '-md') {
$slice: str-slice( #{$sprite-name}, 0, -4);
} @else if str-index($slice, '-sm') {
$slice: str-slice( #{$sprite-name}, 0, -4);
} 

.#{$slice} {
@if ( str-index( #{$sprite-name}, '-lg') ) {
@include breakpoint("maxlarge") {
@include sprite-position($sprite);
@include sprite-width($sprite);
@include sprite-height($sprite);
}
} @else if ( str-index( #{$sprite-name}, '-md') ) {
@include breakpoint("maxmedium") {
@include sprite-position($sprite);
@include sprite-width($sprite);
@include sprite-height($sprite);
}
} @else if ( str-index( #{$sprite-name}, '-sm') ) {
@include breakpoint("maxsmall") {
@include sprite-position($sprite);
@include sprite-width($sprite);
@include sprite-height($sprite);
}
} @else {
@include sprite($sprite);
}
}
}
}

@include sprites($spritesheet-sprites);
